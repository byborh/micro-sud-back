services:
  back:
    build:
      context: .
      dockerfile: ./container/dockerfile/Dockerfile.dev
    environment:
      NODE_ENV: ${NODE_ENV}
      MSSQL_HOST: ${MSSQL_HOST}
      MSSQL_PORT: ${MSSQL_PORT}
      MSSQL_USER: ${MSSQL_USER}
      MSSQL_PASSWORD: ${MSSQL_PASSWORD}
      MSSQL_DATABASE: ${MSSQL_DATABASE}
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - mssql-private-tunnel
    ports:
      - 3000:3000
    extra_hosts:
      - "mssql:172.20.0.2"

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    hostname: mssql
    restart: always
    environment:
      SA_PASSWORD: ${MSSQL_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: ${MSSQL_PID}
    networks:
      - mssql-private-tunnel
    volumes:
      - mssql_data:/var/opt/mssql
    expose:
      - "1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "${MSSQL_PASSWORD}", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  mssql-private-tunnel:
    driver: bridge

volumes:
  mssql_data:
    driver: local
